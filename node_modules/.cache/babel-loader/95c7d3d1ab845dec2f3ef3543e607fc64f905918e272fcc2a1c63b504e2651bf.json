{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halib\\\\Downloads\\\\Projects\\\\Final Project\\\\Final Project\\\\src\\\\components\\\\RaceCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ClassCard from \"./ClassCard\";\nimport \"./RaceCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RaceCard = ({\n  race\n}) => {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(false);\n  const getRecommendedClasses = raceIndex => {\n    const recommendations = {\n      dwarf: [{\n        name: \"Fighter\",\n        role: \"Tank\",\n        description: \"Natural armor proficiency and constitution bonus make dwarves excellent fighters.\"\n      }, {\n        name: \"Cleric\",\n        role: \"Healer\",\n        description: \"Wisdom bonus and defensive abilities complement the cleric's role.\"\n      }]\n    };\n    return recommendations[raceIndex] || [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card__inner ${isFlipped ? \"card__inner--flipped\" : \"\"}`,\n      onClick: () => setIsFlipped(!isFlipped),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__side card__side--front\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card__title\",\n          children: race.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speed\",\n          children: `Speed: ${race.speed}ft`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"abilities\",\n          children: race.ability_bonuses.map((bonus, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"abilities__tag\",\n            children: `${bonus.ability_score.name}: +${bonus.bonus}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"traits\",\n          children: race.traits.map((trait, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag tag--trait\",\n            children: trait.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__side card__side--back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card__title\",\n          children: \"Recommended Classes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classes\",\n          children: getRecommendedClasses(race.index).map((classInfo, index) => /*#__PURE__*/_jsxDEV(ClassCard, {\n            className: classInfo.name,\n            role: classInfo.role,\n            description: classInfo.description\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(RaceCard, \"9NPh+N5IPOCpZ+AUtVyw7TZ32I8=\");\n_c = RaceCard;\nexport default RaceCard;\nvar _c;\n$RefreshReg$(_c, \"RaceCard\");","map":{"version":3,"names":["React","useState","ClassCard","jsxDEV","_jsxDEV","RaceCard","race","_s","isFlipped","setIsFlipped","getRecommendedClasses","raceIndex","recommendations","dwarf","name","role","description","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","speed","ability_bonuses","map","bonus","index","ability_score","traits","trait","classInfo","_c","$RefreshReg$"],"sources":["C:/Users/halib/Downloads/Projects/Final Project/Final Project/src/components/RaceCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ClassCard from \"./ClassCard\";\r\nimport \"./RaceCard.css\";\r\n\r\nconst RaceCard = ({ race }) => {\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  const getRecommendedClasses = (raceIndex) => {\r\n    const recommendations = {\r\n      dwarf: [\r\n        {\r\n          name: \"Fighter\",\r\n          role: \"Tank\",\r\n          description:\r\n            \"Natural armor proficiency and constitution bonus make dwarves excellent fighters.\",\r\n        },\r\n        {\r\n          name: \"Cleric\",\r\n          role: \"Healer\",\r\n          description:\r\n            \"Wisdom bonus and defensive abilities complement the cleric's role.\",\r\n        },\r\n      ],\r\n    };\r\n    return recommendations[raceIndex] || [];\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className={`card__inner ${isFlipped ? \"card__inner--flipped\" : \"\"}`}\r\n        onClick={() => setIsFlipped(!isFlipped)}\r\n      >\r\n        <div className=\"card__side card__side--front\">\r\n          <h2 className=\"card__title\">{race.name}</h2>\r\n          <div className=\"speed\">{`Speed: ${race.speed}ft`}</div>\r\n          <div className=\"abilities\">\r\n            {race.ability_bonuses.map((bonus, index) => (\r\n              <span key={index} className=\"abilities__tag\">\r\n                {`${bonus.ability_score.name}: +${bonus.bonus}`}\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <div className=\"traits\">\r\n            {race.traits.map((trait, index) => (\r\n              <span key={index} className=\"tag tag--trait\">\r\n                {trait.name}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card__side card__side--back\">\r\n          <h2 className=\"card__title\">Recommended Classes</h2>\r\n          <div className=\"classes\">\r\n            {getRecommendedClasses(race.index).map((classInfo, index) => (\r\n              <ClassCard\r\n                key={index}\r\n                className={classInfo.name}\r\n                role={classInfo.role}\r\n                description={classInfo.description}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RaceCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}