{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halib\\\\Downloads\\\\Projects\\\\Final Project\\\\Final Project\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsAuthenticated,\n  races\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n    const user = users.find(u => u.email === formData.email && u.password === formData.password);\n    if (user) {\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\n      setIsAuthenticated(true);\n      navigate(\"/dashboard\", {\n        state: {\n          races\n        },\n        replace: true\n      });\n    } else {\n      setError(\"Invalid email or password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth__title\",\n        children: \"Welcome Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"auth__input\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"auth__input\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth__button\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"FYYWMEfQu/h/ilMtSmgrpoZqRNk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","setIsAuthenticated","races","_s","navigate","formData","setFormData","email","password","error","setError","handleSubmit","e","preventDefault","users","JSON","parse","localStorage","getItem","user","find","u","setItem","stringify","state","replace","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/halib/Downloads/Projects/Final Project/Final Project/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = ({ setIsAuthenticated, races }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    const user = users.find(\r\n      (u) => u.email === formData.email && u.password === formData.password\r\n    );\r\n\r\n    if (user) {\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n      setIsAuthenticated(true);\r\n      navigate(\"/dashboard\", {\r\n        state: { races },\r\n        replace: true,\r\n      });\r\n    } else {\r\n      setError(\"Invalid email or password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <form className=\"auth__form\" onSubmit={handleSubmit}>\r\n        <h2 className=\"auth__title\">Welcome Back</h2>\r\n        {error && <div className=\"auth__error\">{error}</div>}\r\n        <input\r\n          className=\"auth__input\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          className=\"auth__input\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, password: e.target.value })\r\n          }\r\n          required\r\n        />\r\n        <button className=\"auth__button\" type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}