{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halib\\\\Downloads\\\\Projects\\\\Final Project\\\\dnd-races\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./Auth.css\";\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Get users from localStorage\n//     const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n//     const user = users.find(\n//       (u) => u.email === formData.email && u.password === formData.password\n//     );\n\n//     if (user) {\n//       // Store current user in localStorage\n//       localStorage.setItem(\"currentUser\", JSON.stringify(user));\n//       // Navigate to dashboard immediately\n//       navigate(\"/dashboard\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <form className=\"auth-form\" onSubmit={handleSubmit}>\n//         <h2>Welcome Back</h2>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           onChange={(e) =>\n//             setFormData({ ...formData, password: e.target.value })\n//           }\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n    const user = users.find(u => u.email === formData.email && u.password === formData.password);\n    if (user) {\n      // Update authentication state first\n      setIsAuthenticated(true);\n      // Store user data\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\n      // Then navigate\n      navigate(\"/dashboard\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/2eej1HkfPF6xWtDyuRGSIr/kBQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","setIsAuthenticated","_s","navigate","formData","setFormData","email","password","handleSubmit","e","preventDefault","users","JSON","parse","localStorage","getItem","user","find","u","setItem","stringify","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/halib/Downloads/Projects/Final Project/dnd-races/src/components/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./Auth.css\";\r\n\r\n// const Login = () => {\r\n//   const navigate = useNavigate();\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Get users from localStorage\r\n//     const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n//     const user = users.find(\r\n//       (u) => u.email === formData.email && u.password === formData.password\r\n//     );\r\n\r\n//     if (user) {\r\n//       // Store current user in localStorage\r\n//       localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n//       // Navigate to dashboard immediately\r\n//       navigate(\"/dashboard\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container\">\r\n//       <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n//         <h2>Welcome Back</h2>\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, password: e.target.value })\r\n//           }\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    const user = users.find(\r\n      (u) => u.email === formData.email && u.password === formData.password\r\n    );\r\n\r\n    if (user) {\r\n      // Update authentication state first\r\n      setIsAuthenticated(true);\r\n      // Store user data\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n      // Then navigate\r\n      navigate(\"/dashboard\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <h2>Welcome Back</h2>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, password: e.target.value })\r\n          }\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}