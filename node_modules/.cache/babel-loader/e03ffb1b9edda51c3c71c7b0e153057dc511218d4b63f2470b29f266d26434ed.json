{"ast":null,"code":"import _objectSpread from\"C:/Users/halib/Downloads/Projects/Final Project/Final Project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./Auth.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUp=()=>{const navigate=useNavigate();const[formData,setFormData]=useState({username:\"\",email:\"\",password:\"\",confirmPassword:\"\"});const[error,setError]=useState(\"\");const validateForm=()=>{if(!formData.username||!formData.email||!formData.password||!formData.confirmPassword){setError(\"All fields are required\");return false;}if(formData.password!==formData.confirmPassword){setError(\"Passwords do not match\");return false;}if(formData.password.length<6){setError(\"Password must be at least 6 characters long\");return false;}const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(formData.email)){setError(\"Please enter a valid email address\");return false;}return true;};const handleSubmit=e=>{e.preventDefault();setError(\"\");if(!validateForm()){return;}// Check if user already exists\nconst existingUsers=JSON.parse(localStorage.getItem(\"users\")||\"[]\");if(existingUsers.some(user=>user.email===formData.email)){setError(\"Email already registered\");return;}// Create new user\nconst newUser={username:formData.username,email:formData.email,password:formData.password,savedRaces:[],savedClasses:[]};// Save user\nlocalStorage.setItem(\"users\",JSON.stringify([...existingUsers,newUser]));localStorage.setItem(\"currentUser\",JSON.stringify(newUser));// Navigate to dashboard\nnavigate(\"/dashboard\");};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"auth-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create Account\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:formData.username,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{username:e.target.value}))}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:formData.email,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{email:e.target.value}))}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:formData.password,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{password:e.target.value}))}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",value:formData.confirmPassword,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{confirmPassword:e.target.value}))}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign Up\"})]})});};export default SignUp;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","SignUp","navigate","formData","setFormData","username","email","password","confirmPassword","error","setError","validateForm","length","emailRegex","test","handleSubmit","e","preventDefault","existingUsers","JSON","parse","localStorage","getItem","some","user","newUser","savedRaces","savedClasses","setItem","stringify","className","children","onSubmit","type","placeholder","value","onChange","_objectSpread","target"],"sources":["C:/Users/halib/Downloads/Projects/Final Project/Final Project/src/components/SignUp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Auth.css\";\r\n\r\nconst SignUp = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const validateForm = () => {\r\n    if (\r\n      !formData.username ||\r\n      !formData.email ||\r\n      !formData.password ||\r\n      !formData.confirmPassword\r\n    ) {\r\n      setError(\"All fields are required\");\r\n      return false;\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return false;\r\n    }\r\n\r\n    if (formData.password.length < 6) {\r\n      setError(\"Password must be at least 6 characters long\");\r\n      return false;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      setError(\"Please enter a valid email address\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    // Check if user already exists\r\n    const existingUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    if (existingUsers.some((user) => user.email === formData.email)) {\r\n      setError(\"Email already registered\");\r\n      return;\r\n    }\r\n\r\n    // Create new user\r\n    const newUser = {\r\n      username: formData.username,\r\n      email: formData.email,\r\n      password: formData.password,\r\n      savedRaces: [],\r\n      savedClasses: [],\r\n    };\r\n\r\n    // Save user\r\n    localStorage.setItem(\"users\", JSON.stringify([...existingUsers, newUser]));\r\n    localStorage.setItem(\"currentUser\", JSON.stringify(newUser));\r\n\r\n    // Navigate to dashboard\r\n    navigate(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <h2>Create Account</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={formData.username}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, username: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, password: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.confirmPassword}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, confirmPassword: e.target.value })\r\n          }\r\n        />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}