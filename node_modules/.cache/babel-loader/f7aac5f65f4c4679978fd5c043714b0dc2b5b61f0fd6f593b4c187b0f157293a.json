{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halib\\\\Downloads\\\\Projects\\\\Final Project\\\\dnd-races\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport RaceCard from \"./RaceCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard({\n  user\n}) {\n  _s();\n  const [savedRaces, setSavedRaces] = useState([]);\n  useEffect(() => {\n    // Here you would typically fetch saved races from your backend\n    // For now, we'll use localStorage as an example\n    const saved = JSON.parse(localStorage.getItem(\"savedRaces\") || \"[]\");\n    setSavedRaces(saved);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Saved Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"race-cards\",\n      children: savedRaces.map(race => /*#__PURE__*/_jsxDEV(RaceCard, {\n        race: race\n      }, race.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"vx2KDMp5SzJeuVNsIn9M37sKD7c=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","RaceCard","jsxDEV","_jsxDEV","UserDashboard","user","_s","savedRaces","setSavedRaces","saved","JSON","parse","localStorage","getItem","className","children","email","fileName","_jsxFileName","lineNumber","columnNumber","map","race","index","_c","$RefreshReg$"],"sources":["C:/Users/halib/Downloads/Projects/Final Project/dnd-races/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport RaceCard from \"./RaceCard\";\r\n\r\nfunction UserDashboard({ user }) {\r\n  const [savedRaces, setSavedRaces] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Here you would typically fetch saved races from your backend\r\n    // For now, we'll use localStorage as an example\r\n    const saved = JSON.parse(localStorage.getItem(\"savedRaces\") || \"[]\");\r\n    setSavedRaces(saved);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Welcome, {user?.email}</h1>\r\n      <h2>Your Saved Races</h2>\r\n      <div className=\"race-cards\">\r\n        {savedRaces.map((race) => (\r\n          <RaceCard key={race.index} race={race} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,aAAaA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMS,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;IACpEL,aAAa,CAACC,KAAK,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKW,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCZ,OAAA;MAAAY,QAAA,GAAI,WAAS,EAACV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BjB,OAAA;MAAAY,QAAA,EAAI;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBR,UAAU,CAACc,GAAG,CAAEC,IAAI,iBACnBnB,OAAA,CAACF,QAAQ;QAAkBqB,IAAI,EAAEA;MAAK,GAAvBA,IAAI,CAACC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CArBQF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAuBtB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}