{"ast":null,"code":"// import React, { useState } from \"react\";\n// import ClassCard from \"./ClassCard\";\n// import \"./RaceCard.css\";\n// const raceImages = {\n//   dwarf: require(\"../assets/images/dwarf.jpg\"),\n//   elf: require(\"../assets/images/elf.jpg\"),\n//   halfling: require(\"../assets/images/halfling.jpg\"),\n//   human: require(\"../assets/images/human.jpg\"),\n//   dragonborn: require(\"../assets/images/dragonborn.jpg\"),\n//   gnome: require(\"../assets/images/gnome.jpg\"),\n//   \"half-elf\": require(\"../assets/images/halfelf.jpg\"),\n//   \"half-orc\": require(\"../assets/images/halforc.jpg\"),\n//   tiefling: require(\"../assets/images/tiefling.jpg\"),\n// };\n// const RaceCard = ({ race }) => {\n//   const [isFlipped, setIsFlipped] = useState(false);\n\n//   const getRecommendedClasses = (raceIndex) => {\n//     const recommendations = {\n//       dwarf: [\n//         {\n//           name: \"Fighter\",\n//           role: \"Tank\",\n//           description:\n//             \"Natural armor proficiency and constitution bonus make dwarves excellent fighters.\",\n//         },\n//         {\n//           name: \"Cleric\",\n//           role: \"Healer\",\n//           description:\n//             \"Wisdom bonus and defensive abilities complement the cleric's role.\",\n//         },\n//       ],\n//       elf: [\n//         {\n//           name: \"Ranger\",\n//           role: \"Damage Dealer\",\n//           description:\n//             \"Dexterity bonus and natural proficiency with bows make elves exceptional rangers.\",\n//         },\n//         {\n//           name: \"Wizard\",\n//           role: \"Spellcaster\",\n//           description:\n//             \"High intelligence and natural magic affinity suit the wizard class perfectly.\",\n//         },\n//       ],\n//       halfling: [\n//         {\n//           name: \"Rogue\",\n//           role: \"Stealth\",\n//           description:\n//             \"Natural stealth abilities and size make halflings perfect rogues.\",\n//         },\n//         {\n//           name: \"Bard\",\n//           role: \"Support\",\n//           description: \"Charisma and luck powers enhance bardic abilities.\",\n//         },\n//       ],\n//       human: [\n//         {\n//           name: \"Any Class\",\n//           role: \"Versatile\",\n//           description:\n//             \"Balanced ability scores make humans suitable for any class.\",\n//         },\n//         {\n//           name: \"Paladin\",\n//           role: \"Tank/Healer\",\n//           description: \"Versatility and determination make excellent paladins.\",\n//         },\n//       ],\n//       dragonborn: [\n//         {\n//           name: \"Paladin\",\n//           role: \"Tank\",\n//           description: \"Natural strength and charisma make powerful paladins.\",\n//         },\n//         {\n//           name: \"Sorcerer\",\n//           role: \"Spellcaster\",\n//           description: \"Draconic heritage enhances magical abilities.\",\n//         },\n//       ],\n//       gnome: [\n//         {\n//           name: \"Wizard\",\n//           role: \"Spellcaster\",\n//           description:\n//             \"High intelligence and magical aptitude make excellent wizards.\",\n//         },\n//         {\n//           name: \"Artificer\",\n//           role: \"Support\",\n//           description: \"Natural tinkering abilities enhance artificer skills.\",\n//         },\n//       ],\n//       \"half-elf\": [\n//         {\n//           name: \"Warlock\",\n//           role: \"Spellcaster\",\n//           description: \"High charisma and versatility make perfect warlocks.\",\n//         },\n//         {\n//           name: \"Bard\",\n//           role: \"Support\",\n//           description:\n//             \"Social skills and adaptability enhance bardic abilities.\",\n//         },\n//       ],\n//       \"half-orc\": [\n//         {\n//           name: \"Barbarian\",\n//           role: \"Damage Dealer\",\n//           description:\n//             \"Natural strength and endurance make fearsome barbarians.\",\n//         },\n//         {\n//           name: \"Fighter\",\n//           role: \"Tank\",\n//           description:\n//             \"Combat abilities and resilience create powerful fighters.\",\n//         },\n//       ],\n//       tiefling: [\n//         {\n//           name: \"Warlock\",\n//           role: \"Spellcaster\",\n//           description: \"Infernal heritage and charisma make natural warlocks.\",\n//         },\n//         {\n//           name: \"Sorcerer\",\n//           role: \"Spellcaster\",\n//           description: \"Innate magical abilities enhance sorcerous powers.\",\n//         },\n//       ],\n//     };\n//     return recommendations[raceIndex] || [];\n//   };\n//   return (\n//     <div className=\"card\">\n//       <div\n//         className={`card__inner ${isFlipped ? \"card__inner--flipped\" : \"\"}`}\n//         onClick={() => setIsFlipped(!isFlipped)}\n//       >\n//         <div className=\"card__side card__side--front\">\n//           <img\n//             src={raceImages[race.index]}\n//             alt={race.name}\n//             className=\"card__image\"\n//           />\n//           <h2 className=\"card__title\">{race.name}</h2>\n//           <div className=\"speed\">{`Speed: ${race.speed}ft`}</div>\n//           <div className=\"abilities\">\n//             {race.ability_bonuses.map((bonus, index) => (\n//               <span key={index} className=\"abilities__tag\">\n//                 {`${bonus.ability_score.name}: +${bonus.bonus}`}\n//               </span>\n//             ))}\n//           </div>\n//           {/* <div className=\"traits\">\n//             {race.traits.map((trait, index) => (\n//               <span key={index} className=\"tag tag--trait\">\n//                 {trait.name}\n//               </span> */}\n//         </div>\n//       </div>\n\n//       <div className=\"card__side card__side--back\">\n//         <h2 className=\"card__title\">Recommended Classes</h2>\n//         <div className=\"traits\">\n//             {race.traits.map((trait, index) => (\n//               <span key={index} className=\"tag tag--trait\">\n//                 {trait.name}\n//               </span>\n//             ))}\n//           </div>\n//           <div className=\"classes\">\n//             {getRecommendedClasses(race.index).map((classInfo, index) => (\n//               <ClassCard\n//                 key={index}\n//                 className={classInfo.name}\n//                 role={classInfo.role}\n//                 description={classInfo.description}\n//               />\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RaceCard;","map":{"version":3,"names":[],"sources":["C:/Users/halib/Downloads/Projects/Final Project/Final Project/src/components/RaceCard.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import ClassCard from \"./ClassCard\";\r\n// import \"./RaceCard.css\";\r\n// const raceImages = {\r\n//   dwarf: require(\"../assets/images/dwarf.jpg\"),\r\n//   elf: require(\"../assets/images/elf.jpg\"),\r\n//   halfling: require(\"../assets/images/halfling.jpg\"),\r\n//   human: require(\"../assets/images/human.jpg\"),\r\n//   dragonborn: require(\"../assets/images/dragonborn.jpg\"),\r\n//   gnome: require(\"../assets/images/gnome.jpg\"),\r\n//   \"half-elf\": require(\"../assets/images/halfelf.jpg\"),\r\n//   \"half-orc\": require(\"../assets/images/halforc.jpg\"),\r\n//   tiefling: require(\"../assets/images/tiefling.jpg\"),\r\n// };\r\n// const RaceCard = ({ race }) => {\r\n//   const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n//   const getRecommendedClasses = (raceIndex) => {\r\n//     const recommendations = {\r\n//       dwarf: [\r\n//         {\r\n//           name: \"Fighter\",\r\n//           role: \"Tank\",\r\n//           description:\r\n//             \"Natural armor proficiency and constitution bonus make dwarves excellent fighters.\",\r\n//         },\r\n//         {\r\n//           name: \"Cleric\",\r\n//           role: \"Healer\",\r\n//           description:\r\n//             \"Wisdom bonus and defensive abilities complement the cleric's role.\",\r\n//         },\r\n//       ],\r\n//       elf: [\r\n//         {\r\n//           name: \"Ranger\",\r\n//           role: \"Damage Dealer\",\r\n//           description:\r\n//             \"Dexterity bonus and natural proficiency with bows make elves exceptional rangers.\",\r\n//         },\r\n//         {\r\n//           name: \"Wizard\",\r\n//           role: \"Spellcaster\",\r\n//           description:\r\n//             \"High intelligence and natural magic affinity suit the wizard class perfectly.\",\r\n//         },\r\n//       ],\r\n//       halfling: [\r\n//         {\r\n//           name: \"Rogue\",\r\n//           role: \"Stealth\",\r\n//           description:\r\n//             \"Natural stealth abilities and size make halflings perfect rogues.\",\r\n//         },\r\n//         {\r\n//           name: \"Bard\",\r\n//           role: \"Support\",\r\n//           description: \"Charisma and luck powers enhance bardic abilities.\",\r\n//         },\r\n//       ],\r\n//       human: [\r\n//         {\r\n//           name: \"Any Class\",\r\n//           role: \"Versatile\",\r\n//           description:\r\n//             \"Balanced ability scores make humans suitable for any class.\",\r\n//         },\r\n//         {\r\n//           name: \"Paladin\",\r\n//           role: \"Tank/Healer\",\r\n//           description: \"Versatility and determination make excellent paladins.\",\r\n//         },\r\n//       ],\r\n//       dragonborn: [\r\n//         {\r\n//           name: \"Paladin\",\r\n//           role: \"Tank\",\r\n//           description: \"Natural strength and charisma make powerful paladins.\",\r\n//         },\r\n//         {\r\n//           name: \"Sorcerer\",\r\n//           role: \"Spellcaster\",\r\n//           description: \"Draconic heritage enhances magical abilities.\",\r\n//         },\r\n//       ],\r\n//       gnome: [\r\n//         {\r\n//           name: \"Wizard\",\r\n//           role: \"Spellcaster\",\r\n//           description:\r\n//             \"High intelligence and magical aptitude make excellent wizards.\",\r\n//         },\r\n//         {\r\n//           name: \"Artificer\",\r\n//           role: \"Support\",\r\n//           description: \"Natural tinkering abilities enhance artificer skills.\",\r\n//         },\r\n//       ],\r\n//       \"half-elf\": [\r\n//         {\r\n//           name: \"Warlock\",\r\n//           role: \"Spellcaster\",\r\n//           description: \"High charisma and versatility make perfect warlocks.\",\r\n//         },\r\n//         {\r\n//           name: \"Bard\",\r\n//           role: \"Support\",\r\n//           description:\r\n//             \"Social skills and adaptability enhance bardic abilities.\",\r\n//         },\r\n//       ],\r\n//       \"half-orc\": [\r\n//         {\r\n//           name: \"Barbarian\",\r\n//           role: \"Damage Dealer\",\r\n//           description:\r\n//             \"Natural strength and endurance make fearsome barbarians.\",\r\n//         },\r\n//         {\r\n//           name: \"Fighter\",\r\n//           role: \"Tank\",\r\n//           description:\r\n//             \"Combat abilities and resilience create powerful fighters.\",\r\n//         },\r\n//       ],\r\n//       tiefling: [\r\n//         {\r\n//           name: \"Warlock\",\r\n//           role: \"Spellcaster\",\r\n//           description: \"Infernal heritage and charisma make natural warlocks.\",\r\n//         },\r\n//         {\r\n//           name: \"Sorcerer\",\r\n//           role: \"Spellcaster\",\r\n//           description: \"Innate magical abilities enhance sorcerous powers.\",\r\n//         },\r\n//       ],\r\n//     };\r\n//     return recommendations[raceIndex] || [];\r\n//   };\r\n//   return (\r\n//     <div className=\"card\">\r\n//       <div\r\n//         className={`card__inner ${isFlipped ? \"card__inner--flipped\" : \"\"}`}\r\n//         onClick={() => setIsFlipped(!isFlipped)}\r\n//       >\r\n//         <div className=\"card__side card__side--front\">\r\n//           <img\r\n//             src={raceImages[race.index]}\r\n//             alt={race.name}\r\n//             className=\"card__image\"\r\n//           />\r\n//           <h2 className=\"card__title\">{race.name}</h2>\r\n//           <div className=\"speed\">{`Speed: ${race.speed}ft`}</div>\r\n//           <div className=\"abilities\">\r\n//             {race.ability_bonuses.map((bonus, index) => (\r\n//               <span key={index} className=\"abilities__tag\">\r\n//                 {`${bonus.ability_score.name}: +${bonus.bonus}`}\r\n//               </span>\r\n//             ))}\r\n//           </div>\r\n//           {/* <div className=\"traits\">\r\n//             {race.traits.map((trait, index) => (\r\n//               <span key={index} className=\"tag tag--trait\">\r\n//                 {trait.name}\r\n//               </span> */}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"card__side card__side--back\">\r\n//         <h2 className=\"card__title\">Recommended Classes</h2>\r\n//         <div className=\"traits\">\r\n//             {race.traits.map((trait, index) => (\r\n//               <span key={index} className=\"tag tag--trait\">\r\n//                 {trait.name}\r\n//               </span>\r\n//             ))}\r\n//           </div>\r\n//           <div className=\"classes\">\r\n//             {getRecommendedClasses(race.index).map((classInfo, index) => (\r\n//               <ClassCard\r\n//                 key={index}\r\n//                 className={classInfo.name}\r\n//                 role={classInfo.role}\r\n//                 description={classInfo.description}\r\n//               />\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RaceCard;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}